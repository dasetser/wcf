<!--
****************************************************************************************************
Generic build extensions post-targets.
****************************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
  DO NOT CHANGE THIS FILE: 
  This file will be imported automatically by the Microsoft common targets as per specified in the Global.settings.targets file.
  To overwrite properties/targets use the project-specific post-targets file (CustomAfterProjectTargets) which will be imported below.
  -->

  <!-- Custom targets build order -->
  <PropertyGroup>
    <BuildDependsOn>ValidateBuildParams;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>

  <!-- Post target imports -->
  <Import Project="$(BuildCommonTargetsPath)version.targets" />

  <Import Project="$(CustomAfterProjectTargets)" Condition="Exists('$(CustomAfterProjectTargets)')" Label="Post-targets Build Extensibility Point." />

  <!-- Target definitions section -->

  <!--
****************************************************************************************************
Get targets: convenient targets to get individual project's build parameters
****************************************************************************************************-->
  <Target Name="GetOutputPath" Outputs="$(OutputPath)" />
  <Target Name="GetTargetFramework" Outputs="$(TargetFramework)" />

  <!--
****************************************************************************************************
ValidateBuildParams: place where some build parameters are validated.
Using BuildErrorMessage and BuildWarningMessage validation can be extended in custom targets.
****************************************************************************************************-->
  <Target Name="ValidateBuildParams" Condition="'$(ValidateBuildParamsDisabled)' != 'true'">
    <ItemGroup>
      <BuildErrorMessage Condition="!HasTrailingSlash('$(RepositoryRoot)')" Include="RepositoryRoot '$(RepositoryRoot)' must end with a trailing slash!" />
      <BuildErrorMessage Condition="!HasTrailingSlash('$(OutputPath)')" Include="OutputPath '$(OutputPath)' must end with a trailing slash!" />
      <BuildErrorMessage Condition="!HasTrailingSlash('$(IntermediateOutputPath)')" Include="IntermediateOutputPath '$(IntermediateOutputPath)' must end with a trailing slash!" />
      <BuildErrorMessage Condition="'$(OutSubDir)' != '' AND !HasTrailingSlash('$(OutSubDir)')" Include="OutSubDir '$(OutSubDir)' must end with a trailing slash!" />
    </ItemGroup>
    <PropertyGroup>
      <PathWarningMessage>Global repository operations like clean/codesign might not work as expected!</PathWarningMessage>
    </PropertyGroup>
    <ItemGroup>
      <BuildWarningMessage Condition="!$(OutputPath.ToLowerInvariant().Contains('$(BinPath.ToLowerInvariant())'))" Include="OutputPath '$(OutputPath)' not under repository bin path '$(BinPath)'. $(PathWarningMessage)" />
      <BuildWarningMessage Condition="!$(IntermediateOutputPath.ToLowerInvariant().Contains('$(ObjPath.ToLowerInvariant())'))" Include="IntermediateOutputPath '$(IntermediateOutputPath)' not under repository bin path '$(ObjPath)'. $(PathWarningMessage)" />
      <BuildWarningMessage Condition="'$(OutDir)' != '' AND '$(OutputPath)' != '$(OutDir)'" Include="OutputPath '$(OutputPath)' and OutDir '$(OutDir)' properties should have the same value!" />
    </ItemGroup>
    <Warning Text="@(BuildWarningMessage, '%0A')" Condition="'@(BuildWarningMessage)' != ''" />
    <Error Text="@(BuildErrorMessage, '%0A')" Condition="'@(BuildErrorMessage)' != ''" />
  </Target>
  
  <PropertyGroup>
    <!--Force a rebuild if this file is changed -->
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>
</Project>
