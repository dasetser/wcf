//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Tools.ServiceModel.Svcutil.Metadata {
    using System;
    using System.Reflection;
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Tools.ServiceModel.Svcutil.Metadata.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this is a Windows (R) Communication Foundation service to which you have access, please check that you have enabled metadata publishing at the specified address.  For help enabling metadata publishing, please refer to the MSDN documentation at http://go.microsoft.com/fwlink/?LinkId=65455..
        /// </summary>
        internal static string EnableMetadataHelpMessage {
            get {
                return ResourceManager.GetString("EnableMetadataHelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot obtain Metadata from {0}.  The URI scheme &apos;{1}&apos; is not supported by default..
        /// </summary>
        internal static string ErrCannotCreateAMetadataExchangeClientFormat {
            get {
                return ResourceManager.GetString("ErrCannotCreateAMetadataExchangeClientFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input path &apos;{0}&apos; appears to be a directory. Inputs must be either URLs or file paths..
        /// </summary>
        internal static string ErrDirectoryInsteadOfFileFormat {
            get {
                return ResourceManager.GetString("ErrDirectoryInsteadOfFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory &apos;{0}&apos; could not be found. Verify that the directory exists and that you have the appropriate permissions to read it..
        /// </summary>
        internal static string ErrDirectoryNotFoundFormat {
            get {
                return ResourceManager.GetString("ErrDirectoryNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; already exists..
        /// </summary>
        internal static string ErrFileAlreadyExistsFormat {
            get {
                return ResourceManager.GetString("ErrFileAlreadyExistsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified URI &apos;{0}&apos; does not appear to be valid..
        /// </summary>
        internal static string ErrInvalidUriFormat {
            get {
                return ResourceManager.GetString("ErrInvalidUriFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input path &apos;{0}&apos; doesn&apos;t appear to refer to any existing files.
        /// </summary>
        internal static string ErrNoFilesFoundFormat {
            get {
                return ResourceManager.GetString("ErrNoFilesFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path &apos;{0}&apos; does not appear to refer to an XML metadata file..
        /// </summary>
        internal static string ErrNotXmlMetadataFileFormat {
            get {
                return ResourceManager.GetString("ErrNotXmlMetadataFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service metadata has not been imported yet..
        /// </summary>
        internal static string ErrServiceMetadataNotImported {
            get {
                return ResourceManager.GetString("ErrServiceMetadataNotImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot obtain Metadata from the URI: {0} 
        /// Check the URI and try again.{1}.
        /// </summary>
        internal static string ErrUnableToConnectToUriFormat {
            get {
                return ResourceManager.GetString("ErrUnableToConnectToUriFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many files are being created with the prefix &apos;{0}&apos;..
        /// </summary>
        internal static string ErrUnableToCreateUniqueFileNameFormat {
            get {
                return ResourceManager.GetString("ErrUnableToCreateUniqueFileNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve schema reference &apos;{0}&apos;..
        /// </summary>
        internal static string ErrUnableToResolveSchemaReferenceFormat {
            get {
                return ResourceManager.GetString("ErrUnableToResolveSchemaReferenceFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;URL not allowed: &apos;{0}&apos;.  Only metadata document files are allowed when multiple inputs specified!&quot;.
        /// </summary>
        internal static string ErrUrlNotAllowedOnMultipleInputsFormat {
            get {
                return ResourceManager.GetString("ErrUrlNotAllowedOnMultipleInputsFormat", resourceCulture);
            }
        }
    }
}
